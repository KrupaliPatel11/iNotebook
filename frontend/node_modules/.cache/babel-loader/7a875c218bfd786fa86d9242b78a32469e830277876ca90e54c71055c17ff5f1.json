{"ast":null,"code":"var _jsxFileName = \"/Users/ztlab131/Krupali/Practice/MERN/inotebook/src/context/notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./notesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const [notes, setNotes] = useState([]);\n\n  // Add Note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/user/addnotes`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': \"application/json\",\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDgzMzJlZWI2ZDc3NTdmOWUwZDVhZmMiLCJpYXQiOjE2ODY2NTcxODAsImV4cCI6MTY4NjY3MTU4MH0.Cpc-3pg19ThPyflxOUUJtRvGNVAWpsMyDEKYAb459_4\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    // const json = response.json();\n    console.log(response);\n  };\n\n  // Get All Note\n  const getNotes = async () => {\n    const response = await fetch(`${host}/user/allnotes`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': \"application/json\",\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDgzMzJlZWI2ZDc3NTdmOWUwZDVhZmMiLCJpYXQiOjE2ODY2NTcxODAsImV4cCI6MTY4NjY3MTU4MH0.Cpc-3pg19ThPyflxOUUJtRvGNVAWpsMyDEKYAb459_4\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Edit Note\n  const editNote = async (id, title, description, tag) => {\n    // Api call\n    const response = await fetch(`${host}/user/updatenote/${id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': \"application/json\",\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDgzMzJlZWI2ZDc3NTdmOWUwZDVhZmMiLCJpYXQiOjE2ODY2NTcxODAsImV4cCI6MTY4NjY3MTU4MH0.Cpc-3pg19ThPyflxOUUJtRvGNVAWpsMyDEKYAb459_4\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    setNotes(json);\n\n    // Logic for delete note\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n\n  // Delete Note\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      editNote,\n      deleteNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notes","setNotes","addNote","title","description","tag","response","fetch","method","headers","body","JSON","stringify","console","log","getNotes","json","editNote","id","index","length","element","_id","deleteNote","newNotes","filter","note","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ztlab131/Krupali/Practice/MERN/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport NoteContext from \"./notesContext\";\n\nconst NoteState = (props) => {\n    const host = \"http://localhost:5000\"\n    const [notes, setNotes] = useState([])\n\n\n    // Add Note\n    const addNote = async (title, description, tag) => {\n        const response = await fetch(`${host}/user/addnotes`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': \"application/json\",\n                \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDgzMzJlZWI2ZDc3NTdmOWUwZDVhZmMiLCJpYXQiOjE2ODY2NTcxODAsImV4cCI6MTY4NjY3MTU4MH0.Cpc-3pg19ThPyflxOUUJtRvGNVAWpsMyDEKYAb459_4\"\n            },\n            body: JSON.stringify({ title, description, tag })\n        });\n        // const json = response.json();\n        console.log(response)\n    }\n\n    // Get All Note\n    const getNotes = async () => {\n        const response = await fetch(`${host}/user/allnotes`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': \"application/json\",\n                \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDgzMzJlZWI2ZDc3NTdmOWUwZDVhZmMiLCJpYXQiOjE2ODY2NTcxODAsImV4cCI6MTY4NjY3MTU4MH0.Cpc-3pg19ThPyflxOUUJtRvGNVAWpsMyDEKYAb459_4\"\n            },\n        });\n        const json = await response.json()\n        console.log(json);\n        setNotes(json);\n    }\n\n    // Edit Note\n    const editNote = async (id, title, description, tag) => {\n        // Api call\n        const response = await fetch(`${host}/user/updatenote/${id}`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': \"application/json\",\n                \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDgzMzJlZWI2ZDc3NTdmOWUwZDVhZmMiLCJpYXQiOjE2ODY2NTcxODAsImV4cCI6MTY4NjY3MTU4MH0.Cpc-3pg19ThPyflxOUUJtRvGNVAWpsMyDEKYAb459_4\"\n            },\n            body: JSON.stringify({ title, description, tag })\n        });\n\n        const json = response.json();\n        setNotes(json)\n\n        // Logic for delete note\n        for (let index = 0; index < notes.length; index++) {\n            const element = notes[index];\n            if (element._id === id) {\n                element.title = title;\n                element.description = description;\n                element.tag = tag;\n            }\n        }\n    }\n\n    // Delete Note\n    const deleteNote = (id) => {\n        const newNotes = notes.filter((note) => { return note._id !== id });\n        setNotes(newNotes);\n    }\n\n    return (\n        <NoteContext.Provider value={{ notes, addNote, editNote, deleteNote, getNotes }}>\n            {props.children}\n        </NoteContext.Provider>\n    )\n}\n\n\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}